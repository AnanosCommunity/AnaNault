name: Build/release Desktop

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install APT dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git -y
          sudo apt-get install libudev-dev -y
          sudo apt-get install libusb-1.0-0-dev -y
          sudo apt-get install gcc-4.8 g++-4.8 -y

      - name: Install and Build
        run: |
          npm install
          npm run desktop:build
          
      - name: Temporarily fix electron-builder
        # https://github.com/electron-userland/electron-builder/issues/4176
        if: matrix.os != 'macos-latest'
        run: |
          sed -i 's/\^\[\\w/\^\[.\\w/g' node_modules/builder-util/out/util.js
        shell: bash

      - name: Temporarily fix electron-builder (MacOS)
        # https://github.com/electron-userland/electron-builder/issues/4176
        if: matrix.os == 'macos-latest'
        run: |
          sed -i '' 's/\^\[\\w/\^\[.\\w/g' node_modules/builder-util/out/util.js
        shell: bash
        
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # is already built
          skip_build: true

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: |
            desktop-app/build/*.AppImage
            desktop-app/build/*.dmg
            desktop-app/build/*.exe
